####################################################################################################
*** CODE ANALYSIS ***
####################################################################################################

--------------------------------------------------
Execution Analysis
--------------------------------------------------

Execution Index Line #  Scope depth   Indent depth  Interpretable Count   Code  {Variable: Value}  Comments
0               32      0             0             1                     class X:    ['Class definition']
1               34      1             1             1                         def __init__(self):    
2               37      1             1             1                         def __str__(self):    
3               41      0             0             1                     var_a = 2    
4               42      0             0             1                     var_b = 3    
5               45      0             0             1                     def adder(temp_var):    
6               57      0             0             1                     adder(100)    
7               45      0             0             2                     def adder(temp_var):  {'temp_var': 100}  
8               51      1             1             1                         a = 424  {'temp_var': 100}  
9               52      1             1             1                         b = a + temp_var  {'temp_var': 100, 'a': 424}  
10              53      1             1             1                         b = b + 5  {'temp_var': 100, 'a': 424, 'b': 524}  
11              54      1             1             1                         return b  {'temp_var': 100, 'a': 424, 'b': 529}  
12              60      0             0             1                     def out():    
13              71      0             0             1                     var_c = out()    
14              60      0             0             2                     def out():    
15              61      1             1             1                         f = 23    
16              63      1             1             1                         def inner():    
17              68      1             1             1                         return inner()  {'inner': <function out.<locals>.inner at 0x000002C8450B3430>}  
18              63      1             1             2                         def inner():    
19              64      2             2             1                             z = f + 23    
20              65      2             2             1                             a = 23 + z  {'z': 46}  
21              66      2             2             1                             return a  {'z': 46, 'a': 69}  

--------------------------------------------------
Line of code Analysis
--------------------------------------------------

Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 32
Code: class X:
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value}              Comments
0                0            0                    1                {}  ['Class definition']


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 34
Code: def __init__(self):
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0                1            1                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 37
Code: def __str__(self):
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0                2            1                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 41
Code: var_a = 2
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0                3            0                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 42
Code: var_b = 3
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0                4            0                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 45
Code: def adder(temp_var):
Call Count: 2
   Execution Index  Scope depth  Interpretable Count  {Variable: Value} Comments
0                5            0                    1                 {}         
1                7            0                    2  {'temp_var': 100}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 57
Code: adder(100)
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0                6            0                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 51
Code: a = 424
Call Count: 1
   Execution Index  Scope depth  Interpretable Count  {Variable: Value} Comments
0                8            1                    1  {'temp_var': 100}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 52
Code: b = a + temp_var
Call Count: 1
   Execution Index  Scope depth  Interpretable Count            {Variable: Value} Comments
0                9            1                    1  {'temp_var': 100, 'a': 424}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 53
Code: b = b + 5
Call Count: 1
   Execution Index  Scope depth  Interpretable Count                      {Variable: Value} Comments
0               10            1                    1  {'temp_var': 100, 'a': 424, 'b': 524}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 54
Code: return b
Call Count: 1
   Execution Index  Scope depth  Interpretable Count                      {Variable: Value} Comments
0               11            1                    1  {'temp_var': 100, 'a': 424, 'b': 529}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 60
Code: def out():
Call Count: 2
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               12            0                    1                {}         
1               14            0                    2                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 71
Code: var_c = out()
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               13            0                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 61
Code: f = 23
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               15            1                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 63
Code: def inner():
Call Count: 2
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               16            1                    1                {}         
1               18            1                    2                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 68
Code: return inner()
Call Count: 1
   Execution Index  Scope depth  Interpretable Count                                               {Variable: Value} Comments
0               17            1                    1  {'inner': <function out.<locals>.inner at 0x000002C8450B3430>}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 64
Code: z = f + 23
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               19            2                    1                {}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 65
Code: a = 23 + z
Call Count: 1
   Execution Index  Scope depth  Interpretable Count {Variable: Value} Comments
0               20            2                    1         {'z': 46}         


Filename: H:/Programming/Python/projects_github/code_analyzer/examples/example_test.py
Line #: 66
Code: return a
Call Count: 1
   Execution Index  Scope depth  Interpretable Count   {Variable: Value} Comments
0               21            2                    1  {'z': 46, 'a': 69}         


